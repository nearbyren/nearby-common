import nearby.composing.builds.*

plugins {
    id 'com.android.library'
    id 'nearby.composing.builds'
    id 'kotlin-android'
    id 'maven-publish'
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'ren.nearby.common_module'
                artifactId = 'common'
                version = '1.0.0'
            }
        }
    }
}
android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        //阿里路由
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    api AndroidX.percent
//    library重复依赖问题
    api(AndroidX.appcompat) {
        exclude module: "support-annotations"
    }
    api AndroidX.cardview
    api Google.material
    api AndroidX.support_compat
//    library重复依赖问题
    api(AndroidX.support_v13) {
        exclude module: "support-annotations"
    }

    api AndroidX.lifecyle.lcy_ext
    api AndroidX.navigation.fragmentKtx
    api AndroidX.navigation.uiKtx
    api AndroidX.navigation.kot_cor_and
    api AndroidX.navigation.kot_cor_and
    //tab库
//    api AndroidX.constraintlayout.constraint_layout
//    api AndroidX.constraintlayout.constraint_layoutSolver
    api AndroidX.multidex

    //微信热更新 版本更新 bug监控
//    api BuildConfig.crashreport_upgrade
    //加载图库
    api ThirdLib.glide.glide
    api ThirdLib.dagger.dagger
    annotationProcessor ThirdLib.dagger.dagger2_compiler
    api ThirdLib.dagger.dagger2_android
    api ThirdLib.dagger.dagger2_support
    annotationProcessor ThirdLib.dagger.dagger2_processor


    api ThirdLib.logger.logger
    api ThirdLib.timber.timber

    //阿里路由
    api ThirdLib.arouter.arouter_api
    annotationProcessor ThirdLib.arouter.arouter_compiler


    //阿里路由好模块化教程
//    https://yq.aliyun.com/articles/584246
    //检测内存泄漏
//    debugImplementation BuildConfig.leakcanary_a
//    api BuildConfig.leakcanary_a_n_o
//    debugImplementation BuildConfig.leakcanary_s_f


    //弹出框
    api ThirdLib.Toasty
    api ThirdLib.light
    api ThirdLib.stateframelayout

    api ThirdLib.banner.banner
    api ThirdLib.permissionsdispatcher.permissionsdispatcher
    annotationProcessor ThirdLib.permissionsdispatcher.permissionsdispatcher_processor
    api ThirdLib.crashwoodpecker.crashwoodpecker
    api ThirdLib.nativecrashreport

    api ThirdLib.tinker.tinker_lib


    api ThirdLib.rxjava.rxjava
    api ThirdLib.rxjava.rxandroid
    api(ThirdLib.rxjava.rxbinding2) {
        exclude module: "rxjava"
    }

    api ThirdLib.okhttp3.okhttp3

    api ThirdLib.okhttp3.logging_interceptor
//    library重复依赖问题
    api(ThirdLib.okhttp3.retrofit) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
//    library重复依赖问题
    api(ThirdLib.okhttp3.retrofit_converter_gson) {
//        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
//    library重复依赖问题
    api(ThirdLib.okhttp3.adapter_rxjava2) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api ThirdLib.okhttp3.converter_calars
    api ThirdLib.stetho_okhttp3.stetho_okhttp3
    api ThirdLib.stetho.stetho


    api ThirdLib.dagger.dagger
    annotationProcessor ThirdLib.dagger.dagger2_compiler //kapt 处理dagger 与kotlin问题
    api ThirdLib.dagger.dagger2_android
    api ThirdLib.dagger.dagger2_support
    annotationProcessor ThirdLib.dagger.dagger2_processor //kapt 处理dagger 与kotlin问题
}

configurations.all { //循环一个个的依赖库
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested //获取当前循环到的依赖库
//        println("vale ="+requested)
//        println("vale 2 ="+requested.name)
        if (requested.group == 'com.android.support') {//如果这个依赖库群组的名字是com.android.support
            if (!requested.name.startsWith("multidex")) { //且其名字不是以multidex开头的
                details.useVersion '28.0.0'//这里指定需要统一的依赖版本
            }
        }
        if (requested.group == 'androidx.annotation:annotation:1.0.0') {
//如果这个依赖库群组的名字是com.android.support
            details.useVersion '1.1.0'//这里指定需要统一的依赖版本
        }
    }
}